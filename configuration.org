#+TITLE: Emacs configuration
#+AUTHOR: Hieu Phan

* How to use

* Add package repositories
#+BEGIN_SRC emacs-lisp
(require 'package)
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
(package-initialize)
#+END_SRC

* Security
Getting hints from [[https://glyph.twistedmatrix.com/2015/11/editor-malware.html][Your Text Editor Is Malware]].
** Check TLS
#+BEGIN_SRC emacs-lisp
(setq tls-checktrust t)
(setq gnutls-verify-error t)
#+END_SRC

* Automatic installing packages
** Install =use-package= and its dependencies if needed
#+BEGIN_SRC emacs-lisp
(mapc
  (lambda (package)
    (if (not (package-installed-p package))
      (progn
        (package-refresh-contents)
        (package-install package))))
  '(use-package diminish bind-key))
#+END_SRC
** Trigger =use-package= and force the install of missing packages
#+BEGIN_SRC emacs-lisp
(eval-when-compile
  (require 'use-package))
(setq use-package-always-ensure t)
#+END_SRC

* Configure Evil mode
#+BEGIN_SRC emacs-lisp :tangle no
(use-package evil :ensure t
  :init
  (evil-mode 1))
#+END_SRC

* Configure Ivy
** =ivy= 
#+BEGIN_SRC emacs-lisp
(use-package ivy :ensure t
  :init
  (ivy-mode 1)
  :config
  (setq ivy-use-virtual-buffers  t
        ivy-height 20  ;; The number of candicate matches displayed in the minibuffer
        ivy-count-format "(%d/%d) "
	enable-recrusive-minibuffers t)
)
#+END_SRC
** =swiper=
#+BEGIN_SRC emacs-lisp
(use-package swiper :ensure t)
#+END_SRC
** =counsel=
#+BEGIN_SRC emacs-lisp
(use-package counsel :ensure t)
#+END_SRC

* Required packages
** =avy=
#+BEGIN_SRC emacs-lisp
(use-package avy :ensure t
  :init
  (avy-setup-default)
)
#+END_SRC
** =which-key= package key navigation
#+BEGIN_SRC emacs-lisp
(use-package which-key :ensure t
  :init
  (which-key-mode)
  :config
  (setq which-key-sort-order 'which-key-key-order-alpha
        which-key-side-window-max-width 0.333
        which-key-idle-delay 0.4)
  (which-key-setup-minibuffer)
)
#+END_SRC
** =winum= to navigate between windows by number (SPC 1)
#+BEGIN_SRC emacs-lisp
(use-package winum :ensure t
  :config
  (winum-mode))
#+END_SRC
** =magit=
#+BEGIN_SRC emacs-lisp
(use-package magit :ensure t
  :commands
  (magit-status)
  :config
  (setq magit-completing-read-function 'ivy-completing-read)
)
#+END_SRC   
** =evil-magit=
   This package requires both evil and magit.
#+BEGIN_SRC emacs-lisp
(use-package evil-magit :ensure t)
#+END_SRC
** =restart-emacs=
#+BEGIN_SRC emacs-lisp
(use-package restart-emacs :ensure t
  :commands
  (restart-emacs)
)
#+END_SRC

* Binding keys
#+BEGIN_SRC emacs-lisp
(use-package general :ensure t
  :config
  (general-define-key
  "C-s" 'swiper
  "M-x" 'counsel-M-x
  "C-x C-f" 'counsel-find-file
  "C-h f" 'counsel-describe-function
  "C-h v" 'counsel-describe-variable
  
  ;; Jumping
  "C-:" 'avy-goto-char
  "C-;" 'avy-goto-char-2
  "M-g f" 'avy-goto-line
  "M-g w" 'avy-goto-word-1
  )
)
#+END_SRC

* Configure UI
** Theme
#+BEGIN_SRC emacs-lisp
(use-package dracula-theme :ensure t
  :config
  (load-theme 'dracula t))
#+END_SRC
** Font
Use the Hack font from [[https://github.com/chrissimpkins/Hack][chrissimpkins]].
#+BEGIN_SRC emacs-lisp
(if (condition-case nil
        (x-list-fonts "Hack")
      (error nil))
    (progn
      (add-to-list 'default-frame-alist '(font . "Hack-10"))
      (set-face-attribute 'default nil :font "Hack-10")))
#+END_SRC
** Powerline
#+BEGIN_SRC emacs-lisp
(use-package powerline :ensure t
  :config
  (powerline-default-theme)
)
#+END_SRC
** Disable toolbar and menubar
#+BEGIN_SRC emacs-lisp
(tool-bar-mode -1)
(menu-bar-mode -1)
#+END_SRC
** Disable scrollbar
#+BEGIN_SRC emacs-lisp
(scroll-bar-mode -1)
#+END_SRC
** Disable splash screen
#+BEGIN_SRC emacs-lisp :tangle no
(setq inhibit-startup-message t)
#+END_SRC
** Disable the bell
#+BEGIN_SRC emacs-lisp
(setq ring-bell-funcion 'ignore)
#+END_SRC
** Ask for confirmation before quitting
#+BEGIN_SRC emacs-lisp
(setq confirm-kill-emacs 'y-or-n-p)
#+END_SRC
** Highlight the current line
#+BEGIN_SRC emacs-lisp
(when window-system
  (global-hl-line-mode))
#+END_SRC
** Show line number
#+BEGIN_SRC emacs-lisp
(global-display-line-numbers-mode)
#+END_SRC
** Show ruler at 80

* Startup behavior
** Toggle fullscreen by default
#+BEGIN_SRC emacs-lisp
(toggle-frame-maximized)
#+END_SRC
** Empty scratch buffer
#+BEGIN_SRC emacs-lisp
(setq initial-scratch-message nil)
#+END_SRC

